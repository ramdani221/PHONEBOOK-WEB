{"ast":null,"code":"const contacts = (state = {\n  phonebooks: [],\n  page: 1,\n  limit: 60,\n  total: 1,\n  pages: 1\n}, action) => {\n  switch (action.type) {\n    case 'LOAD_CONTACT_SUCCESS':\n      return action.contacts;\n    case 'ADD_CONTACT_SUCCES':\n      return state;\n    case 'UPDATE_CONTACT_SUCCESS':\n      const update = {\n        phonebooks: state.phonebooks.map(contacts => {\n          if (contacts.id == action.data.id) return action.data;\n          return contacts;\n        })\n      };\n      return {\n        ...state,\n        ...update\n      };\n    case 'DELETE_CONTACT_SUCCESS':\n      return {\n        ...state,\n        phonebooks: state.phonebooks.filter(contacts => contacts.id !== action.id)\n      };\n    case 'UPDATE_AVATAR_SUCCESS':\n      return state;\n    case 'LOAD_PAGE_SUCCESS':\n      return {\n        ...state,\n        phonebooks: [...state.phonebooks, ...action.contacts.phonebooks],\n        page: action.contacts.page\n      };\n    case 'LOAD_CONTACT_FAILED':\n    case 'ADD_CONTACT_FAILED':\n    case 'UPDATE_CONTACT_FAILED':\n    case 'DELETE_CONTACT_FAILED':\n    case 'UPDATE_AVATAR_FAILED':\n    default:\n      return state;\n  }\n};\nexport default contacts;","map":{"version":3,"names":["contacts","state","phonebooks","page","limit","total","pages","action","type","update","map","id","data","filter"],"sources":["/home/ramdani/Documents/web-phonebooks/src/reducers/contacts.js"],"sourcesContent":["const contacts = (state = { phonebooks: [], page: 1, limit: 60, total: 1, pages: 1 }, action) => {\n    switch (action.type) {\n        case 'LOAD_CONTACT_SUCCESS':\n            return action.contacts\n        case 'ADD_CONTACT_SUCCES':\n            return state;\n        case 'UPDATE_CONTACT_SUCCESS':\n            const update = { phonebooks: state.phonebooks.map((contacts) => {\n                if (contacts.id == action.data.id) return action.data\n                return contacts\n            })};\n            return { ...state, ...update };\n        case 'DELETE_CONTACT_SUCCESS':\n            return { ...state, phonebooks: state.phonebooks.filter((contacts) => contacts.id !== action.id) }\n        case 'UPDATE_AVATAR_SUCCESS':\n            return state;\n        case 'LOAD_PAGE_SUCCESS':\n            return { ...state, phonebooks: [...state.phonebooks, ...action.contacts.phonebooks], page: action.contacts.page }\n        case 'LOAD_CONTACT_FAILED':\n        case 'ADD_CONTACT_FAILED':\n        case 'UPDATE_CONTACT_FAILED':\n        case 'DELETE_CONTACT_FAILED':\n        case 'UPDATE_AVATAR_FAILED':\n        default:\n            return state;\n    }\n}\n\nexport default contacts"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,KAAK,GAAG;EAAEC,UAAU,EAAE,EAAE;EAAEC,IAAI,EAAE,CAAC;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC,EAAEC,MAAM,KAAK;EAC7F,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,sBAAsB;MACvB,OAAOD,MAAM,CAACP,QAAQ;IAC1B,KAAK,oBAAoB;MACrB,OAAOC,KAAK;IAChB,KAAK,wBAAwB;MACzB,MAAMQ,MAAM,GAAG;QAAEP,UAAU,EAAED,KAAK,CAACC,UAAU,CAACQ,GAAG,CAAEV,QAAQ,IAAK;UAC5D,IAAIA,QAAQ,CAACW,EAAE,IAAIJ,MAAM,CAACK,IAAI,CAACD,EAAE,EAAE,OAAOJ,MAAM,CAACK,IAAI;UACrD,OAAOZ,QAAQ;QACnB,CAAC;MAAC,CAAC;MACH,OAAO;QAAE,GAAGC,KAAK;QAAE,GAAGQ;MAAO,CAAC;IAClC,KAAK,wBAAwB;MACzB,OAAO;QAAE,GAAGR,KAAK;QAAEC,UAAU,EAAED,KAAK,CAACC,UAAU,CAACW,MAAM,CAAEb,QAAQ,IAAKA,QAAQ,CAACW,EAAE,KAAKJ,MAAM,CAACI,EAAE;MAAE,CAAC;IACrG,KAAK,uBAAuB;MACxB,OAAOV,KAAK;IAChB,KAAK,mBAAmB;MACpB,OAAO;QAAE,GAAGA,KAAK;QAAEC,UAAU,EAAE,CAAC,GAAGD,KAAK,CAACC,UAAU,EAAE,GAAGK,MAAM,CAACP,QAAQ,CAACE,UAAU,CAAC;QAAEC,IAAI,EAAEI,MAAM,CAACP,QAAQ,CAACG;MAAK,CAAC;IACrH,KAAK,qBAAqB;IAC1B,KAAK,oBAAoB;IACzB,KAAK,uBAAuB;IAC5B,KAAK,uBAAuB;IAC5B,KAAK,sBAAsB;IAC3B;MACI,OAAOF,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}