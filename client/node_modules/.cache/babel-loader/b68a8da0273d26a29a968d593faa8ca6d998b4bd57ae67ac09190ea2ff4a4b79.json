{"ast":null,"code":"const contacts = (state = {\n  phonebooks: [],\n  page: 1,\n  limit: 60,\n  total: 1,\n  pages: 1\n}, action) => {\n  switch (action.type) {\n    case 'LOAD_CONTACT_SUCCESS':\n      return {\n        ...action.contacts,\n        ...action.sort\n      };\n    case 'ADD_CONTACT_SUCCES':\n      return state;\n    case 'UPDATE_CONTACT_SUCCESS':\n      const update = {\n        phonebooks: [...state.phonebooks.filter(contacts => contacts.id !== action.data.id), action.data]\n      };\n      update.phonebooks.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        return 0;\n      });\n      if (state.sort === \"desc\") update.phonebooks.reverse();\n      return {\n        ...state,\n        phonebooks: update.phonebooks.filter(contact => {\n          return contact.name.toLowerCase().includes(state.keyword.toLowerCase()) || contact.phone.toLowerCase().includes(state.keyword.toLowerCase());\n        })\n      };\n    case 'DELETE_CONTACT_SUCCESS':\n      return {\n        ...state,\n        phonebooks: state.phonebooks.filter(contacts => contacts.id !== action.id)\n      };\n    case 'UPDATE_AVATAR_SUCCESS':\n      return state;\n    case 'LOAD_PAGE_SUCCESS':\n      return {\n        ...state,\n        phonebooks: [...state.phonebooks, ...action.contacts.phonebooks],\n        page: action.contacts.page\n      };\n    case 'LOAD_CONTACT_FAILED':\n    case 'ADD_CONTACT_FAILED':\n    case 'UPDATE_CONTACT_FAILED':\n    case 'DELETE_CONTACT_FAILED':\n    case 'UPDATE_AVATAR_FAILED':\n    default:\n      return state;\n  }\n};\nexport default contacts;","map":{"version":3,"names":["contacts","state","phonebooks","page","limit","total","pages","action","type","sort","update","filter","id","data","a","b","name","toLowerCase","reverse","contact","includes","keyword","phone"],"sources":["/home/ramdani/Documents/web-phonebooks/src/reducers/contacts.js"],"sourcesContent":["const contacts = (state = { phonebooks: [], page: 1, limit: 60, total: 1, pages: 1 }, action) => {\n    switch (action.type) {\n        case 'LOAD_CONTACT_SUCCESS':\n            return { ...action.contacts, ...action.sort }\n        case 'ADD_CONTACT_SUCCES':\n            return state;\n        case 'UPDATE_CONTACT_SUCCESS':\n            const update = { phonebooks: [...(state.phonebooks.filter((contacts) => contacts.id !== action.data.id)), action.data] };\n            update.phonebooks.sort((a, b) => {\n                if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n                if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n                return 0;\n            });\n            if (state.sort === \"desc\") update.phonebooks.reverse()\n            return {\n                ...state,\n                phonebooks: update.phonebooks.filter(contact => {\n                     return contact.name.toLowerCase().includes(state.keyword.toLowerCase()) || contact.phone.toLowerCase().includes(state.keyword.toLowerCase())\n                })\n            };\n        case 'DELETE_CONTACT_SUCCESS':\n            return { ...state, phonebooks: state.phonebooks.filter((contacts) => contacts.id !== action.id) }\n        case 'UPDATE_AVATAR_SUCCESS':\n            return state;\n        case 'LOAD_PAGE_SUCCESS':\n            return { ...state, phonebooks: [...state.phonebooks, ...action.contacts.phonebooks], page: action.contacts.page }\n        case 'LOAD_CONTACT_FAILED':\n        case 'ADD_CONTACT_FAILED':\n        case 'UPDATE_CONTACT_FAILED':\n        case 'DELETE_CONTACT_FAILED':\n        case 'UPDATE_AVATAR_FAILED':\n        default:\n            return state;\n    }\n}\n\nexport default contacts"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,KAAK,GAAG;EAAEC,UAAU,EAAE,EAAE;EAAEC,IAAI,EAAE,CAAC;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC,EAAEC,MAAM,KAAK;EAC7F,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,sBAAsB;MACvB,OAAO;QAAE,GAAGD,MAAM,CAACP,QAAQ;QAAE,GAAGO,MAAM,CAACE;MAAK,CAAC;IACjD,KAAK,oBAAoB;MACrB,OAAOR,KAAK;IAChB,KAAK,wBAAwB;MACzB,MAAMS,MAAM,GAAG;QAAER,UAAU,EAAE,CAAC,GAAID,KAAK,CAACC,UAAU,CAACS,MAAM,CAAEX,QAAQ,IAAKA,QAAQ,CAACY,EAAE,KAAKL,MAAM,CAACM,IAAI,CAACD,EAAE,CAAE,EAAEL,MAAM,CAACM,IAAI;MAAE,CAAC;MACxHH,MAAM,CAACR,UAAU,CAACO,IAAI,CAAC,CAACK,CAAC,EAAEC,CAAC,KAAK;QAC7B,IAAID,CAAC,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QAC1D,IAAIH,CAAC,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC;QACzD,OAAO,CAAC;MACZ,CAAC,CAAC;MACF,IAAIhB,KAAK,CAACQ,IAAI,KAAK,MAAM,EAAEC,MAAM,CAACR,UAAU,CAACgB,OAAO,CAAC,CAAC;MACtD,OAAO;QACH,GAAGjB,KAAK;QACRC,UAAU,EAAEQ,MAAM,CAACR,UAAU,CAACS,MAAM,CAACQ,OAAO,IAAI;UAC3C,OAAOA,OAAO,CAACH,IAAI,CAACC,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACnB,KAAK,CAACoB,OAAO,CAACJ,WAAW,CAAC,CAAC,CAAC,IAAIE,OAAO,CAACG,KAAK,CAACL,WAAW,CAAC,CAAC,CAACG,QAAQ,CAACnB,KAAK,CAACoB,OAAO,CAACJ,WAAW,CAAC,CAAC,CAAC;QACjJ,CAAC;MACL,CAAC;IACL,KAAK,wBAAwB;MACzB,OAAO;QAAE,GAAGhB,KAAK;QAAEC,UAAU,EAAED,KAAK,CAACC,UAAU,CAACS,MAAM,CAAEX,QAAQ,IAAKA,QAAQ,CAACY,EAAE,KAAKL,MAAM,CAACK,EAAE;MAAE,CAAC;IACrG,KAAK,uBAAuB;MACxB,OAAOX,KAAK;IAChB,KAAK,mBAAmB;MACpB,OAAO;QAAE,GAAGA,KAAK;QAAEC,UAAU,EAAE,CAAC,GAAGD,KAAK,CAACC,UAAU,EAAE,GAAGK,MAAM,CAACP,QAAQ,CAACE,UAAU,CAAC;QAAEC,IAAI,EAAEI,MAAM,CAACP,QAAQ,CAACG;MAAK,CAAC;IACrH,KAAK,qBAAqB;IAC1B,KAAK,oBAAoB;IACzB,KAAK,uBAAuB;IAC5B,KAAK,uBAAuB;IAC5B,KAAK,sBAAsB;IAC3B;MACI,OAAOF,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}