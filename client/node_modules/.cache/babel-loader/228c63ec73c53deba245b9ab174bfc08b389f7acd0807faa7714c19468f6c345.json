{"ast":null,"code":"var _jsxFileName = \"/home/ramdani/Documents/web-phonebooks/src/components/UpdateAvatar.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { updateAvatar } from \"../actions/contacts\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateAvatar() {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n  const [selectedImage, setSelectedImage] = useState();\n  const imageChange = e => {\n    if (e.target.files && e.target.files.length > 0) {\n      setSelectedImage(e.target.files[0]);\n    }\n  };\n  const submit = () => {\n    console.log(selectedImage);\n    // const formData = new FormData()\n    // formData.append('avatar', selectedImage)\n    // dispatch(updateAvatar(state.id, formData))\n    // navigate('/')\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-avatar\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        accept: \"image/*\",\n        type: \"file\",\n        onChange: imageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-form-update\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), selectedImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: URL.createObjectURL(selectedImage),\n        alt: \"Thumb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"http://localhost:3000/images/\" + (state.avatar ? state.avatar : \"user-tie-solid.svg\"),\n        alt: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateAvatar, \"9dnbf8lTgCS/MU35ieWyALZsykY=\", false, function () {\n  return [useDispatch, useNavigate, useLocation];\n});\n_c = UpdateAvatar;\nvar _c;\n$RefreshReg$(_c, \"UpdateAvatar\");","map":{"version":3,"names":["useState","useDispatch","useLocation","useNavigate","updateAvatar","Link","jsxDEV","_jsxDEV","UpdateAvatar","_s","dispatch","navigate","state","selectedImage","setSelectedImage","imageChange","e","target","files","length","submit","console","log","className","children","onSubmit","accept","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","to","src","URL","createObjectURL","alt","avatar","_c","$RefreshReg$"],"sources":["/home/ramdani/Documents/web-phonebooks/src/components/UpdateAvatar.js"],"sourcesContent":["import { useState } from \"react\"\nimport { useDispatch } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { updateAvatar } from \"../actions/contacts\";\nimport { Link } from \"react-router-dom\"\n\nexport default function UpdateAvatar() {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const { state } = useLocation()\n    const [selectedImage, setSelectedImage] = useState();\n\n    const imageChange = (e) => {\n        if (e.target.files && e.target.files.length > 0) {\n            setSelectedImage(e.target.files[0]);\n        }\n    };\n\n    const submit = () => {\n        console.log(selectedImage)\n        // const formData = new FormData()\n        // formData.append('avatar', selectedImage)\n        // dispatch(updateAvatar(state.id, formData))\n        // navigate('/')\n    }\n\n    return (\n        <div className=\"update-avatar\">\n            <form onSubmit={submit}>\n                <input accept=\"image/*\" type=\"file\" onChange={imageChange} />\n                <div className=\"btn-form-update\">\n                    <button type=\"submit\">save</button>\n                    <Link to=\"/\">cancel</Link>\n                </div>\n            </form>\n\n            {(selectedImage ? (\n                <div className=\"preview\">\n                    <img\n                        src={URL.createObjectURL(selectedImage)}\n                        alt=\"Thumb\"\n                    />\n                </div>\n            ) :\n                (<div className=\"preview\">\n                    <img src={\"http://localhost:3000/images/\" +\n                        (state.avatar ? state.avatar : \"user-tie-solid.svg\")} alt=\"avatar\" />\n                </div>\n                )\n            )}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}