{"ast":null,"code":"const contacts = (state = {\n  phonebooks: [],\n  page: 1,\n  limit: 60,\n  total: 1,\n  pages: 1\n}, action) => {\n  switch (action.type) {\n    case 'LOAD_CONTACT_SUCCESS':\n      return {\n        ...action.contacts,\n        ...action.sort\n      };\n    case 'ADD_CONTACT_SUCCES':\n      return state;\n    case 'UPDATE_CONTACT_SUCCESS':\n      console.log('jalan');\n      const update = {\n        phonebooks: [...state.phonebooks.filter(contacts => contacts.id !== action.data.id), action.data]\n      };\n      update.phonebooks.sort((a, b) => {\n        if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n        if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        return 0;\n      }).filter(contact => {\n        return contact.toLowerCase().includes(state.keyword.toLowerCase());\n      });\n      console.log(state);\n      if (state.sort === \"desc\") update.phonebooks.reverse();\n      return {\n        ...state,\n        ...update\n      };\n    case 'DELETE_CONTACT_SUCCESS':\n      return {\n        ...state,\n        phonebooks: state.phonebooks.filter(contacts => contacts.id !== action.id)\n      };\n    case 'UPDATE_AVATAR_SUCCESS':\n      return state;\n    case 'LOAD_PAGE_SUCCESS':\n      return {\n        ...state,\n        phonebooks: [...state.phonebooks, ...action.contacts.phonebooks],\n        page: action.contacts.page\n      };\n    case 'LOAD_CONTACT_FAILED':\n    case 'ADD_CONTACT_FAILED':\n    case 'UPDATE_CONTACT_FAILED':\n    case 'DELETE_CONTACT_FAILED':\n    case 'UPDATE_AVATAR_FAILED':\n    default:\n      return state;\n  }\n};\nexport default contacts;","map":{"version":3,"names":["contacts","state","phonebooks","page","limit","total","pages","action","type","sort","console","log","update","filter","id","data","a","b","name","toLowerCase","contact","includes","keyword","reverse"],"sources":["/home/ramdani/Documents/web-phonebooks/src/reducers/contacts.js"],"sourcesContent":["const contacts = (state = { phonebooks: [], page: 1, limit: 60, total: 1, pages: 1 }, action) => {\n    switch (action.type) {\n        case 'LOAD_CONTACT_SUCCESS':\n            return {...action.contacts, ...action.sort}\n        case 'ADD_CONTACT_SUCCES':\n            return state;\n        case 'UPDATE_CONTACT_SUCCESS':\n            console.log('jalan')\n            const update = { phonebooks: [...(state.phonebooks.filter((contacts) => contacts.id !== action.data.id)), action.data] };\n            update.phonebooks.sort((a, b) => {\n                if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n                if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n                return 0;\n            }).filter(contact => {\n                return contact.toLowerCase().includes(state.keyword.toLowerCase())\n            })\n            console.log(state)\n            if(state.sort === \"desc\") update.phonebooks.reverse()\n            return { ...state, ...update };\n        case 'DELETE_CONTACT_SUCCESS':\n            return { ...state, phonebooks: state.phonebooks.filter((contacts) => contacts.id !== action.id) }\n        case 'UPDATE_AVATAR_SUCCESS':\n            return state;\n        case 'LOAD_PAGE_SUCCESS':\n            return { ...state, phonebooks: [...state.phonebooks, ...action.contacts.phonebooks], page: action.contacts.page }\n        case 'LOAD_CONTACT_FAILED':\n        case 'ADD_CONTACT_FAILED':\n        case 'UPDATE_CONTACT_FAILED':\n        case 'DELETE_CONTACT_FAILED':\n        case 'UPDATE_AVATAR_FAILED':\n        default:\n            return state;\n    }\n}\n\nexport default contacts"],"mappings":"AAAA,MAAMA,QAAQ,GAAGA,CAACC,KAAK,GAAG;EAAEC,UAAU,EAAE,EAAE;EAAEC,IAAI,EAAE,CAAC;EAAEC,KAAK,EAAE,EAAE;EAAEC,KAAK,EAAE,CAAC;EAAEC,KAAK,EAAE;AAAE,CAAC,EAAEC,MAAM,KAAK;EAC7F,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,sBAAsB;MACvB,OAAO;QAAC,GAAGD,MAAM,CAACP,QAAQ;QAAE,GAAGO,MAAM,CAACE;MAAI,CAAC;IAC/C,KAAK,oBAAoB;MACrB,OAAOR,KAAK;IAChB,KAAK,wBAAwB;MACzBS,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpB,MAAMC,MAAM,GAAG;QAAEV,UAAU,EAAE,CAAC,GAAID,KAAK,CAACC,UAAU,CAACW,MAAM,CAAEb,QAAQ,IAAKA,QAAQ,CAACc,EAAE,KAAKP,MAAM,CAACQ,IAAI,CAACD,EAAE,CAAE,EAAEP,MAAM,CAACQ,IAAI;MAAE,CAAC;MACxHH,MAAM,CAACV,UAAU,CAACO,IAAI,CAAC,CAACO,CAAC,EAAEC,CAAC,KAAK;QAC7B,IAAID,CAAC,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC;QAC1D,IAAIH,CAAC,CAACE,IAAI,CAACC,WAAW,CAAC,CAAC,GAAGF,CAAC,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC;QACzD,OAAO,CAAC;MACZ,CAAC,CAAC,CAACN,MAAM,CAACO,OAAO,IAAI;QACjB,OAAOA,OAAO,CAACD,WAAW,CAAC,CAAC,CAACE,QAAQ,CAACpB,KAAK,CAACqB,OAAO,CAACH,WAAW,CAAC,CAAC,CAAC;MACtE,CAAC,CAAC;MACFT,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;MAClB,IAAGA,KAAK,CAACQ,IAAI,KAAK,MAAM,EAAEG,MAAM,CAACV,UAAU,CAACqB,OAAO,CAAC,CAAC;MACrD,OAAO;QAAE,GAAGtB,KAAK;QAAE,GAAGW;MAAO,CAAC;IAClC,KAAK,wBAAwB;MACzB,OAAO;QAAE,GAAGX,KAAK;QAAEC,UAAU,EAAED,KAAK,CAACC,UAAU,CAACW,MAAM,CAAEb,QAAQ,IAAKA,QAAQ,CAACc,EAAE,KAAKP,MAAM,CAACO,EAAE;MAAE,CAAC;IACrG,KAAK,uBAAuB;MACxB,OAAOb,KAAK;IAChB,KAAK,mBAAmB;MACpB,OAAO;QAAE,GAAGA,KAAK;QAAEC,UAAU,EAAE,CAAC,GAAGD,KAAK,CAACC,UAAU,EAAE,GAAGK,MAAM,CAACP,QAAQ,CAACE,UAAU,CAAC;QAAEC,IAAI,EAAEI,MAAM,CAACP,QAAQ,CAACG;MAAK,CAAC;IACrH,KAAK,qBAAqB;IAC1B,KAAK,oBAAoB;IACzB,KAAK,uBAAuB;IAC5B,KAAK,uBAAuB;IAC5B,KAAK,sBAAsB;IAC3B;MACI,OAAOF,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}