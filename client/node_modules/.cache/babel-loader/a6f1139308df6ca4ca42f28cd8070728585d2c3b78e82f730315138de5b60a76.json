{"ast":null,"code":"import axios from \"axios\";\nconst request = axios.create({\n  baseURL: 'http://localhost:3000/api/',\n  timeout: 1000,\n  headers: {\n    'X-Custom-Header': 'foobar'\n  }\n});\nexport const loadContact = filter => dispatch => request.get('phonebooks', {\n  params: filter\n}).then(({\n  data\n}) => {\n  dispatch({\n    type: 'LOAD_CONTACT_SUCCESS',\n    contacts: data\n  });\n}).catch(() => {\n  dispatch({\n    type: 'LOAD_CONTACT_FAILED'\n  });\n});\nexport const addContact = contact => dispatch => request.post('phonebooks', contact).then(({\n  data\n}) => {\n  console.log(data);\n  dispatch({\n    type: 'ADD_CONTACT_SUCCESS'\n  });\n}).catch(() => {\n  dispatch({\n    type: 'ADD_CONTACT_FAILED'\n  });\n});\nexport const updateContact = (id, contact) => dispatch => request.put(`phonebooks/${id}`, contact).then(({\n  data\n}) => {\n  dispatch({\n    type: 'UPDATE_CONTACT_SUCCESS',\n    data\n  });\n}).catch(() => {\n  dispatch({\n    type: 'UPDATE_CONTACT_FAILED'\n  });\n});\nexport const deleteContact = id => dispatch => request.delete(`phonebooks/${id}`).then(() => {\n  dispatch({\n    type: 'DELETE_CONTACT_SUCCESS',\n    id\n  });\n}).catch(() => {\n  dispatch({\n    type: 'DELETE_CONTACT_FAILED'\n  });\n});\nexport const updateAvatar = (id, file) => dispatch => request.put(`phonebooks/${id}/avatar`, file, {\n  headers: {\n    'Content-Type': 'multipart/form-data'\n  }\n}).then(({\n  data\n}) => {\n  dispatch({\n    type: 'UPDATE_AVATAR_SUCCESS',\n    data\n  });\n}).catch(() => {\n  dispatch({\n    type: 'UPDATE_AVATAR_FAILED'\n  });\n});\nexport const loadPage = filter => dispatch => request.get('phonebooks', {\n  params: filter\n}).then(({\n  data\n}) => {\n  dispatch({\n    type: 'LOAD_PAGE_SUCCESS',\n    contacts: data\n  });\n}).catch(() => {\n  dispatch({\n    type: 'LOAD_PAGE_FAILED'\n  });\n});","map":{"version":3,"names":["axios","request","create","baseURL","timeout","headers","loadContact","filter","dispatch","get","params","then","data","type","contacts","catch","addContact","contact","post","console","log","updateContact","id","put","deleteContact","delete","updateAvatar","file","loadPage"],"sources":["/home/ramdani/Documents/web-phonebooks/src/actions/contacts.js"],"sourcesContent":["\nimport axios from \"axios\";\n\nconst request = axios.create({\n    baseURL: 'http://localhost:3000/api/',\n    timeout: 1000,\n    headers: { 'X-Custom-Header': 'foobar' }\n});\n\nexport const loadContact = (filter) => dispatch => request.get('phonebooks', {params: filter}).then(({ data }) => {\n    dispatch({ type: 'LOAD_CONTACT_SUCCESS', contacts: data })\n}).catch(() => {\n    dispatch({ type: 'LOAD_CONTACT_FAILED' })\n});\n\nexport const addContact = (contact) => dispatch => request.post('phonebooks', contact).then(({data}) => {\n    console.log(data)\n    dispatch({ type: 'ADD_CONTACT_SUCCESS' })\n}).catch(() => {\n    dispatch({ type: 'ADD_CONTACT_FAILED' })\n});\n\nexport const updateContact = (id, contact) => dispatch => request.put(`phonebooks/${id}`, contact).then(({ data }) => {\n    dispatch({ type: 'UPDATE_CONTACT_SUCCESS', data })\n}).catch(() => {\n    dispatch({ type: 'UPDATE_CONTACT_FAILED' })\n});\n\nexport const deleteContact = (id) => dispatch => request.delete(`phonebooks/${id}`).then(() => {\n    dispatch({ type: 'DELETE_CONTACT_SUCCESS', id })\n}).catch(() => {\n    dispatch({ type: 'DELETE_CONTACT_FAILED' })\n});\n\nexport const updateAvatar = (id, file) => dispatch => request.put(`phonebooks/${id}/avatar`, file, {\n    headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n}).then(({ data }) => {\n    dispatch({ type: 'UPDATE_AVATAR_SUCCESS', data })\n}).catch(() => {\n    dispatch({ type: 'UPDATE_AVATAR_FAILED' })\n});\n\nexport const loadPage = (filter) => dispatch => request.get('phonebooks', {params: filter}).then(({ data }) => {\n    dispatch({ type: 'LOAD_PAGE_SUCCESS', contacts: data })\n}).catch(() => {\n    dispatch({ type: 'LOAD_PAGE_FAILED' })\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}